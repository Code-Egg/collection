---
- name: Install MySql Packages
  apt: name={{ item }} update_cache=yes state=present
  loop: [ 'mysql-server', 'python3-pymysql' ]
  tags: [ mysql, system ]

- name: Check if root password is set
  command: mysqladmin -u root status
  changed_when: false
  failed_when: false
  register: root_pwd_check

- name: Set the root password
  mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  tags: [ mysql, mysql-root ]
  when: root_pwd_check.rc == 0

- name: Write root login credentials
  copy:
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: 0600
    content: |
      # Managed by Ansible
      [client]
      user=root
      password={{ mysql_root_password }}
  tags: [ mysql, mysql-root ]

- name: Set MySql root password for 127.0.0.1, ::1
  mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    host: "{{ item }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: "/var/run/mysqld/mysqld.sock"
    state: present
  with_items:
    - ::1
    - 127.0.0.1
  when: root_pwd_check.rc == 0
  tags: [ mysql, mysql-root ]

- name: Remove all anonymous user accounts
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags: [ mysql ]

- name: Remove the MySQL test database
  mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags: [ mysql ]

- name: Creates database for WordPress
  mysql_db:
    name: "{{ mysql_db }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags: [ mysql ]

- name: Create MySQL user for WordPress
  mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    priv: "{{ mysql_db }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags: [ mysql ]